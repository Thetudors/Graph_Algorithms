<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>